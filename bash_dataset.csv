English understanding,Shell script
move file.txt to the backup directory,mv file.txt backup/
rename report.doc to summary.doc,mv report.doc summary.doc
copy image.png to the images folder,cp image.png images/
create a new directory named logs,mkdir logs
remove the temp folder and its contents,rm -r temp/
list all files in the current directory,ls
list all hidden files in the current directory,ls -a
move all .txt files to the docs folder,mv *.txt docs/
copy all files from dir1 to dir2,cp dir1/* dir2/
create nested folders a/b/c,mkdir -p a/b/c
delete a file named delete_me.txt,rm delete_me.txt
find all .py files in current directory,find . -name '*.py'
compress logs directory into logs.tar.gz,tar -czvf logs.tar.gz logs/
extract logs.tar.gz file,tar -xzvf logs.tar.gz
change file permissions to executable for script.sh,chmod +x script.sh
move up one directory and list contents,cd .. && ls
display current working directory,pwd
move everything from downloads to documents,mv downloads/* documents/
remove all .log files,rm *.log
copy script.sh to parent directory,cp script.sh ../
remove directory named old_data,rm -r old_data/
rename image1.jpg to photo.jpg,mv image1.jpg photo.jpg
move all PDFs to pdfs directory,mv *.pdf pdfs/
create directory if not exists named 'results',mkdir -p results
copy directory 'configs' to backup,cp -r configs backup/
list all files in /etc directory,ls /etc
show contents of file.txt,cat file.txt
clear terminal screen,clear
search for the word 'error' in logfile.txt,grep 'error' logfile.txt
move all .txt files from current directory to docs,mv *.txt docs/
move backup.zip to the backup folder one level up,mv backup.zip ../backup/
move everything from temp to archive,mv temp/* archive/
create a new folder called backups inside the current directory,mkdir backups
make a directory named scripts inside utils,mkdir -p utils/scripts
create folders named data1 to data5,mkdir data{1..5}
rename file1.txt to file2.txt,mv file1.txt file2.txt
change the name of old_folder to new_folder,mv old_folder new_folder
rename report_2022.docx to report_final.docx,mv report_2022.docx report_final.docx
delete the file unwanted.log,rm unwanted.log
remove the directory temp_files and its contents,rm -r temp_files/
remove all png files in the current folder,rm *.png
copy index.html to the public folder,cp index.html public/
copy everything from src to dest folder,cp -r src/* dest/
copy image.jpg and rename it as image_backup.jpg,cp image.jpg image_backup.jpg
find all .sh files in the current directory,find . -name '*.sh'
search for the string 'error' in server.log,grep 'error' server.log
make script.sh executable,chmod +x script.sh
write and execute permissions to all for file.sh,chmod 777 file.sh
display contents of todo.txt,cat todo.txt
show the first 10 lines of log.txt,head log.txt
show the last 5 lines of history.log,tail -n 5 history.log
list all subdirectories in current directory,ls -d */
move all jpg files from images to photos,mv images/*.jpg photos/
copy all .csv files to data folder,cp *.csv data/
create a directory called archive,mkdir archive
remove all files in the cache directory,rm cache/*
find all files larger than 10MB,find . -type f -size +10M
find all empty directories,find . -type d -empty
copy file.txt and rename as file_copy.txt,cp file.txt file_copy.txt
move all files except .md files to backup,mv ^*.md backup/
find all files modified in the last 24 hours,find . -type f -mtime -1
find all directories named 'test',find . -type d -name 'test'
copy all files starting with 'data' to dataset,cp data* dataset/
move all files from dirA to dirB,mv dirA/* dirB/
remove all files in the current directory except .sh files,rm ^*.sh
create a directory structure a/b/c/d,mkdir -p a/b/c/d
copy all files and folders from src to dest,cp -r src/* dest/
move all files from current directory to parent directory,mv * ../
rename folder old to new,mv old new
remove all files with .bak extension,rm *.bak
find all files containing 'password',grep -rl 'password' .
copy all .json files from configs to backup,cp configs/*.json backup/
move all files from downloads to /tmp,mv downloads/* /tmp/
create a directory named test inside /tmp,mkdir /tmp/test
remove all files in /tmp older than 7 days,find /tmp -type f -mtime +7 -exec rm {} \;
find all symbolic links in current directory,find . -type l
find all files owned by user 'sohan',find . -user sohan
copy all files from /var/log to logs,cp /var/log/* logs/
move all .mp3 files to music directory,mv *.mp3 music/
create a directory named '2025' inside documents,mkdir documents/2025
remove all files in logs except error.log,rm logs/^error.log
find all files with 777 permissions,find . -type f -perm 0777
find all files not accessed in last 30 days,find . -type f -atime +30
copy all .zip files to archives,cp *.zip archives/
move all .tar.gz files to backup,mv *.tar.gz backup/
create a directory named 'images' if it doesn't exist,mkdir -p images
remove all files in images directory,rm images/*
find all files with .conf extension,find . -name '*.conf'
copy all .md files to docs,cp *.md docs/
move all .xls files to spreadsheets,mv *.xls spreadsheets/
create a directory named 'projects' in home directory,mkdir ~/projects
remove all files in /tmp except .log files,rm /tmp/^*.log
find all files with 'TODO' in their name,find . -name '*TODO*'
copy all .txt files from notes to backup,cp notes/*.txt backup/
move all .docx files to documents,mv *.docx documents/
create a directory named 'bin' in /usr/local,mkdir -p /usr/local/bin
remove all files in bin directory,rm bin/*
find all files with .bak or .tmp extension,find . -name '*.bak' -o -name '*.tmp'
copy all .pdf files to reports,cp *.pdf reports/
move all .csv files to data,mv *.csv data/
create a directory named 'logs' in /var,mkdir -p /var/logs
remove all files in /var/logs older than 30 days,find /var/logs -type f -mtime +30 -exec rm {} \;
find all files with spaces in their names,find . -name '* *'
copy all .tar files to archives,cp *.tar archives/
move all .gz files to compressed,mv *.gz compressed/
create a directory named 'downloads' in home,mkdir ~/downloads
remove all files in downloads directory,rm downloads/*
find all files with .ini extension,find . -name '*.ini'
copy all .jpg files to images,cp *.jpg images/
move all .pptx files to presentations,mv *.pptx presentations/
create a directory named 'scripts' in /opt,mkdir -p /opt/scripts
remove all files in scripts directory,rm scripts/*
find all files with .log extension,find . -name '*.log'
copy all .doc files to docs,cp *.doc docs/
move all .mp4 files to videos,mv *.mp4 videos/
create a directory named 'cache' in /tmp,mkdir /tmp/cache
remove all files in cache directory,rm /tmp/cache/*
find all files with .dat extension,find . -name '*.dat'
copy all .xls files to excel,cp *.xls excel/
move all .txt files to textfiles,mv *.txt textfiles/
create a directory named 'notes' in home,mkdir ~/notes
remove all files in notes directory,rm ~/notes/*
find all files with .csv extension,find . -name '*.csv'
copy all .png files to pictures,cp *.png pictures/
move all .wav files to audio,mv *.wav audio/
create a directory named 'output' in current directory,mkdir output
remove all files in output directory,rm output/*
find all files with .xml extension,find . -name '*.xml'
copy all .mp3 files to music,cp *.mp3 music/
move all .avi files to movies,mv *.avi movies/
create a directory named 'temp' in /var,mkdir /var/temp
remove all files in temp directory,rm /var/temp/*
find all files with .json extension,find . -name '*.json'
copy all .gif files to gifs,cp *.gif gifs/
move all .flac files to music,mv *.flac music/
create a directory named 'backup' in /mnt,mkdir /mnt/backup
remove all files in backup directory,rm /mnt/backup/*
find all files with .yml extension,find . -name '*.yml'
copy all .mp4 files to videos,cp *.mp4 videos/
move all .mkv files to movies,mv *.mkv movies/
create a directory named 'docs' in /srv,mkdir /srv/docs
remove all files in docs directory,rm /srv/docs/*
find all files with .tar extension,find . -name '*.tar'
copy all .wav files to audio,cp *.wav audio/
move all .ogg files to music,mv *.ogg music/
create a directory named 'media' in /media,mkdir /media/media
remove all files in media directory,rm /media/media/*
find all files with .zip extension,find . -name '*.zip'
copy all .flac files to music,cp *.flac music/
move all .aac files to music,mv *.aac music/
create a directory named 'public' in /var/www,mkdir -p /var/www/public
remove all files in public directory,rm /var/www/public/*
find all files with .mp3 extension,find . -name '*.mp3'
copy all .aac files to music,cp *.aac music/
move all .webm files to videos,mv *.webm videos/
create a directory named 'private' in /srv,mkdir /srv/private
remove all files in private directory,rm /srv/private/*
find all files with .md extension,find . -name '*.md'
copy all .webm files to videos,cp *.webm videos/
move all .mov files to movies,mv *.mov movies/
create a directory named 'projects' in /opt,mkdir /opt/projects
remove all files in projects directory,rm /opt/projects/*
find all files with .docx extension,find . -name '*.docx'
copy all .mov files to movies,cp *.mov movies/
move all .bmp files to images,mv *.bmp images/
create a directory named 'samples' in /tmp,mkdir /tmp/samples
remove all files in samples directory,rm /tmp/samples/*
find all files with .bmp extension,find . -name '*.bmp'
copy all .bmp files to images,cp *.bmp images/
move all .tiff files to images,mv *.tiff images/
create a directory named 'snapshots' in /var,mkdir /var/snapshots
remove all files in snapshots directory,rm /var/snapshots/*
find all files with .tiff extension,find . -name '*.tiff'
copy all .tiff files to images,cp *.tiff images/
move all .svg files to images,mv *.svg images/
create a directory named 'svg' in /usr/share,mkdir /usr/share/svg
remove all files in svg directory,rm /usr/share/svg/*
find all files with .svg extension,find . -name '*.svg'
copy all .svg files to images,cp *.svg images/
move all .psd files to images,mv *.psd images/
create a directory named 'psd' in /usr/share,mkdir /usr/share/psd
remove all files in psd directory,rm /usr/share/psd/*
find all files with .psd extension,find . -name '*.psd'
copy all .psd files to images,cp *.psd images/
move all .ai files to images,mv *.ai images/
create a directory named 'ai' in /usr/share,mkdir /usr/share/ai
remove all files in ai directory,rm /usr/share/ai/*
find all files with .ai extension,find . -name '*.ai'
copy all .ai files to images,cp *.ai images/
move all .eps files to images,mv *.eps images/
create a directory named 'eps' in /usr/share,mkdir /usr/share/eps
remove all files in eps directory,rm /usr/share/eps/*
find all files with .eps extension,find . -name '*.eps'
copy all .eps files to images,cp *.eps images/
move all .odt files to documents,mv *.odt documents/
create a directory named 'odt' in /usr/share,mkdir /usr/share/odt
remove all files in odt directory,rm /usr/share/odt/*
find all files with .odt extension,find . -name '*.odt'
copy all .odt files to documents,cp *.odt documents/
move all .rtf files to documents,mv *.rtf documents/
create a directory named 'rtf' in /usr/share,mkdir /usr/share/rtf
remove all files in rtf directory,rm /usr/share/rtf/*
find all files with .rtf extension,find . -name '*.rtf'
copy all .rtf files to documents,cp *.rtf documents/
move all .txt files from notes to textfiles,mv notes/*.txt textfiles/
create a directory named 'textfiles' in /srv,mkdir /srv/textfiles
remove all files in textfiles directory,rm /srv/textfiles/*
find all files with .txt extension,find . -name '*.txt'
copy all .txt files to textfiles,cp *.txt textfiles/
move all .csv files from data to backup,mv data/*.csv backup/
create a directory named 'backup' in /srv,mkdir /srv/backup
remove all files in backup directory,rm /srv/backup/*
find all files with .csv extension,find . -name '*.csv'
copy all .csv files to backup,cp *.csv backup/
move all .json files from configs to backup,mv configs/*.json backup/
create a directory named 'backup' in /opt,mkdir /opt/backup
remove all files in backup directory,rm /opt/backup/*
find all files with .json extension,find . -name '*.json'
copy all .json files to backup,cp *.json backup/
move all .txt files created today to today_txt/,find . -maxdepth 1 -name '*.txt' -newermt $(date +%F) -exec mv {} today_txt/ \;
move all .jpg files modified yesterday to yesterdays_jpg/,find . -maxdepth 1 -name '*.jpg' -mtime 1 -exec mv {} yesterdays_jpg/ \;
move all files created in the last 7 days to recent/,find . -maxdepth 1 -type f -ctime -7 -exec mv {} recent/ \;
move all files older than 30 days to archive/,find . -maxdepth 1 -type f -mtime +30 -exec mv {} archive/ \;
move all .log files from logs/ to old_logs/,mv logs/*.log old_logs/
move all files starting with '2025_' to year2025/,mv 2025_* year2025/
move all files ending with '_backup' to backups/,mv *_backup backups/
move all files with a dash in the name to dashed_files/,find . -maxdepth 1 -type f -name '*-*' -exec mv {} dashed_files/ \;
move all files with numbers in the name to numbered/,find . -maxdepth 1 -type f -regex '.*[0-9].*' -exec mv {} numbered/ \;
move all .csv files from data/2025/ to data_csv/,mv data/2025/*.csv data_csv/
move all .md files from docs/ to markdowns/,mv docs/*.md markdowns/
move all .sh files from scripts/ to shell_scripts/,mv scripts/*.sh shell_scripts/
move all .zip files from downloads/ to zips/,mv downloads/*.zip zips/
move all .tar.gz files from archives/ to compressed/,mv archives/*.tar.gz compressed/
move all .pdf files from reports/ to pdfs/,mv reports/*.pdf pdfs/
move all .png files from images/2025/ to pngs/,mv images/2025/*.png pngs/
move all .mp3 files from music/old/ to mp3s/,mv music/old/*.mp3 mp3s/
move all .docx files from drafts/ to word_docs/,mv drafts/*.docx word_docs/
move all .xls files from finance/ to excels/,mv finance/*.xls excels/
move all .pptx files from slides/ to presentations/,mv slides/*.pptx presentations/
move all .json files from configs/ to jsons/,mv configs/*.json jsons/
move all .xml files from data/ to xmls/,mv data/*.xml xmls/
move all .yml files from ci/ to yamls/,mv ci/*.yml yamls/
move all .ini files from settings/ to inis/,mv settings/*.ini inis/
move all .gif files from gifs/ to images/,mv gifs/*.gif images/
move all .bmp files from bitmaps/ to bmps/,mv bitmaps/*.bmp bmps/
move all .svg files from vectors/ to svgs/,mv vectors/*.svg svgs/
move all .psd files from design/ to psds/,mv design/*.psd psds/
move all .ai files from illustrator/ to ais/,mv illustrator/*.ai ais/
move all .eps files from graphics/ to epss/,mv graphics/*.eps epss/
move all .odt files from openoffice/ to odts/,mv openoffice/*.odt odts/
move all .rtf files from richtext/ to rtfs/,mv richtext/*.rtf rtfs/
move all .wav files from audio/ to wavs/,mv audio/*.wav wavs/
move all .flac files from music/ to flacs/,mv music/*.flac flacs/
move all .aac files from audio/ to aacs/,mv audio/*.aac aacs/
move all .webm files from videos/ to webms/,mv videos/*.webm webms/
move all .mov files from movies/ to movs/,mv movies/*.mov movs/
move all .mkv files from movies/ to mkvs/,mv movies/*.mkv mkvs/
move all .avi files from movies/ to avis/,mv movies/*.avi avis/
move all .tar files from archives/ to tars/,mv archives/*.tar tars/
move all .gz files from compressed/ to gzs/,mv compressed/*.gz gzs/
move all .dat files from data/ to dats/,mv data/*.dat dats/
move all .bak files from backups/ to baks/,mv backups/*.bak baks/
move all .tmp files from temp/ to tmps/,mv temp/*.tmp tmps/
move all .conf files from configs/ to confs/,mv configs/*.conf confs/
move all .log files from logs/2025/ to logs2025/,mv logs/2025/*.log logs2025/
move all .txt files from notes/2025/ to txts2025/,mv notes/2025/*.txt txts2025/
move all .md files from docs/2025/ to mds2025/,mv docs/2025/*.md mds2025/
move all .sh files from scripts/2025/ to shs2025/,mv scripts/2025/*.sh shs2025/
move all .zip files from downloads/2025/ to zips2025/,mv downloads/2025/*.zip zips2025/
move all .tar.gz files from archives/2025/ to compressed2025/,mv archives/2025/*.tar.gz compressed2025/
move all .pdf files from reports/2025/ to pdfs2025/,mv reports/2025/*.pdf pdfs2025/
move all .png files from images/2025/ to pngs2025/,mv images/2025/*.png pngs2025/
move all .mp3 files from music/2025/ to mp3s2025/,mv music/2025/*.mp3 mp3s2025/
move all .docx files from drafts/2025/ to word_docs2025/,mv drafts/2025/*.docx word_docs2025/
move all .xls files from finance/2025/ to excels2025/,mv finance/2025/*.xls excels2025/
move all .pptx files from slides/2025/ to presentations2025/,mv slides/2025/*.pptx presentations2025/
move all .json files from configs/2025/ to jsons2025/,mv configs/2025/*.json jsons2025/
move all .xml files from data/2025/ to xmls2025/,mv data/2025/*.xml xmls2025/
move all .yml files from ci/2025/ to yamls2025/,mv ci/2025/*.yml yamls2025/
move all .ini files from settings/2025/ to inis2025/,mv settings/2025/*.ini inis2025/
move all .gif files from gifs/2025/ to images2025/,mv gifs/2025/*.gif images2025/
move all .bmp files from bitmaps/2025/ to bmps2025/,mv bitmaps/2025/*.bmp bmps2025/
move all .svg files from vectors/2025/ to svgs2025/,mv vectors/2025/*.svg svgs2025/
move all .psd files from design/2025/ to psds2025/,mv design/2025/*.psd psds2025/
move all .ai files from illustrator/2025/ to ais2025/,mv illustrator/2025/*.ai ais2025/
move all .eps files from graphics/2025/ to epss2025/,mv graphics/2025/*.eps epss2025/
move all .odt files from openoffice/2025/ to odts2025/,mv openoffice/2025/*.odt odts2025/
move all .rtf files from richtext/2025/ to rtfs2025/,mv richtext/2025/*.rtf rtfs2025/
move all .wav files from audio/2025/ to wavs2025/,mv audio/2025/*.wav wavs2025/
move all .flac files from music/2025/ to flacs2025/,mv music/2025/*.flac flacs2025/
move all .aac files from audio/2025/ to aacs2025/,mv audio/2025/*.aac aacs2025/
move all .webm files from videos/2025/ to webms2025/,mv videos/2025/*.webm webms2025/
move all .mov files from movies/2025/ to movs2025/,mv movies/2025/*.mov movs2025/
move all .mkv files from movies/2025/ to mkvs2025/,mv movies/2025/*.mkv mkvs2025/
move all .avi files from movies/2025/ to avis2025/,mv movies/2025/*.avi avis2025/
move all .tar files from archives/2025/ to tars2025/,mv archives/2025/*.tar tars2025/
move all .gz files from compressed/2025/ to gzs2025/,mv compressed/2025/*.gz gzs2025/
move all .dat files from data/2025/ to dats2025/,mv data/2025/*.dat dats2025/
move all .bak files from backups/2025/ to baks2025/,mv backups/2025/*.bak baks2025/
move all .tmp files from temp/2025/ to tmps2025/,mv temp/2025/*.tmp tmps2025/
move all .conf files from configs/2025/ to confs2025/,mv configs/2025/*.conf confs2025/
move all files created in January 2025 to jan2025/,find . -maxdepth 1 -type f -newermt 2025-01-01 ! -newermt 2025-02-01 -exec mv {} jan2025/ \;
move all files created in February 2025 to feb2025/,find . -maxdepth 1 -type f -newermt 2025-02-01 ! -newermt 2025-03-01 -exec mv {} feb2025/ \;
move all files created in March 2025 to mar2025/,find . -maxdepth 1 -type f -newermt 2025-03-01 ! -newermt 2025-04-01 -exec mv {} mar2025/ \;
move all files created in April 2025 to apr2025/,find . -maxdepth 1 -type f -newermt 2025-04-01 ! -newermt 2025-05-01 -exec mv {} apr2025/ \;
move all files created in May 2025 to may2025/,find . -maxdepth 1 -type f -newermt 2025-05-01 ! -newermt 2025-06-01 -exec mv {} may2025/ \;
move all files created in June 2025 to jun2025/,find . -maxdepth 1 -type f -newermt 2025-06-01 ! -newermt 2025-07-01 -exec mv {} jun2025/ \;
move all files created in July 2025 to jul2025/,find . -maxdepth 1 -type f -newermt 2025-07-01 ! -newermt 2025-08-01 -exec mv {} jul2025/ \;
move all files created in August 2025 to aug2025/,find . -maxdepth 1 -type f -newermt 2025-08-01 ! -newermt 2025-09-01 -exec mv {} aug2025/ \;
move all files created in September 2025 to sep2025/,find . -maxdepth 1 -type f -newermt 2025-09-01 ! -newermt 2025-10-01 -exec mv {} sep2025/ \;
move all files created in October 2025 to oct2025/,find . -maxdepth 1 -type f -newermt 2025-10-01 ! -newermt 2025-11-01 -exec mv {} oct2025/ \;
move all files created in November 2025 to nov2025/,find . -maxdepth 1 -type f -newermt 2025-11-01 ! -newermt 2025-12-01 -exec mv {} nov2025/ \;
move all files created in December 2025 to dec2025/,find . -maxdepth 1 -type f -newermt 2025-12-01 ! -newermt 2026-01-01 -exec mv {} dec2025/ \;
rename all .txt files to .bak extension,for f in *.txt; do mv "$f" "${f%.txt}.bak"; done
rename all .jpg files to .jpeg extension,for f in *.jpg; do mv "$f" "${f%.jpg}.jpeg"; done
rename all .log files to .old extension,for f in *.log; do mv "$f" "${f%.log}.old"; done
rename all .csv files to .tsv extension,for f in *.csv; do mv "$f" "${f%.csv}.tsv"; done
rename all .md files to .markdown extension,for f in *.md; do mv "$f" "${f%.md}.markdown"; done
rename all .sh files to .shell extension,for f in *.sh; do mv "$f" "${f%.sh}.shell"; done
rename all .zip files to .archive extension,for f in *.zip; do mv "$f" "${f%.zip}.archive"; done
rename all .tar.gz files to .tgz extension,for f in *.tar.gz; do mv "$f" "${f%.tar.gz}.tgz"; done
rename all .pdf files to .doc extension,for f in *.pdf; do mv "$f" "${f%.pdf}.doc"; done
rename all .png files to .image extension,for f in *.png; do mv "$f" "${f%.png}.image"; done
rename all .mp3 files to .audio extension,for f in *.mp3; do mv "$f" "${f%.mp3}.audio"; done
rename all .docx files to .word extension,for f in *.docx; do mv "$f" "${f%.docx}.word"; done
rename all .xls files to .excel extension,for f in *.xls; do mv "$f" "${f%.xls}.excel"; done
rename all .pptx files to .powerpoint extension,for f in *.pptx; do mv "$f" "${f%.pptx}.powerpoint"; done
rename all .json files to .jsn extension,for f in *.json; do mv "$f" "${f%.json}.jsn"; done
rename all .xml files to .x extension,for f in *.xml; do mv "$f" "${f%.xml}.x"; done
rename all .yml files to .yaml extension,for f in *.yml; do mv "$f" "${f%.yml}.yaml"; done
rename all .ini files to .configuration extension,for f in *.ini; do mv "$f" "${f%.ini}.configuration"; done
rename all .gif files to .g extension,for f in *.gif; do mv "$f" "${f%.gif}.g"; done
rename all .bmp files to .bitmap extension,for f in *.bmp; do mv "$f" "${f%.bmp}.bitmap"; done
rename all .svg files to .vector extension,for f in *.svg; do mv "$f" "${f%.svg}.vector"; done
rename all .psd files to .photoshop extension,for f in *.psd; do mv "$f" "${f%.psd}.photoshop"; done
rename all .ai files to .illustrator extension,for f in *.ai; do mv "$f" "${f%.ai}.illustrator"; done
rename all .eps files to .encapsulated extension,for f in *.eps; do mv "$f" "${f%.eps}.encapsulated"; done
rename all .odt files to .openoffice extension,for f in *.odt; do mv "$f" "${f%.odt}.openoffice"; done
rename all .rtf files to .richtext extension,for f in *.rtf; do mv "$f" "${f%.rtf}.richtext"; done
rename all .wav files to .wave extension,for f in *.wav; do mv "$f" "${f%.wav}.wave"; done
rename all .flac files to .lossless extension,for f in *.flac; do mv "$f" "${f%.flac}.lossless"; done
rename all .aac files to .aac_audio extension,for f in *.aac; do mv "$f" "${f%.aac}.aac_audio"; done
rename all .webm files to .webmovie extension,for f in *.webm; do mv "$f" "${f%.webm}.webmovie"; done
rename all .mov files to .movie extension,for f in *.mov; do mv "$f" "${f%.mov}.movie"; done
rename all .mkv files to .matroska extension,for f in *.mkv; do mv "$f" "${f%.mkv}.matroska"; done
rename all .avi files to .avi_video extension,for f in *.avi; do mv "$f" "${f%.avi}.avi_video"; done
rename all .tar files to .tarball extension,for f in *.tar; do mv "$f" "${f%.tar}.tarball"; done
rename all .gz files to .gzip extension,for f in *.gz; do mv "$f" "${f%.gz}.gzip"; done
rename all .dat files to .data extension,for f in *.dat; do mv "$f" "${f%.dat}.data"; done
rename all .bak files to .backup extension,for f in *.bak; do mv "$f" "${f%.bak}.backup"; done
rename all .tmp files to .temporary extension,for f in *.tmp; do mv "$f" "${f%.tmp}.temporary"; done
rename all .conf files to .configuration extension,for f in *.conf; do mv "$f" "${f%.conf}.configuration"; done
rename all files with spaces to underscores,for f in *' '*; do mv "$f" "${f// /_}"; done
rename all files with dashes to underscores,for f in *-*; do mv "$f" "${f//-/_}"; done
rename all files with uppercase to lowercase,for f in *; do mv "$f" "$(echo $f | tr 'A-Z' 'a-z')"; done
rename all files with lowercase to uppercase,for f in *; do mv "$f" "$(echo $f | tr 'a-z' 'A-Z')"; done
rename all files with .bak extension to .old,for f in *.bak; do mv "$f" "${f%.bak}.old"; done
rename all files with .tmp extension to .bak,for f in *.tmp; do mv "$f" "${f%.tmp}.bak"; done
rename all files with .log extension to .txt,for f in *.log; do mv "$f" "${f%.log}.txt"; done
rename all files with .txt extension to .md,for f in *.txt; do mv "$f" "${f%.txt}.md"; done
rename all files with .md extension to .txt,for f in *.md; do mv "$f" "${f%.md}.txt"; done
rename all files with .csv extension to .bak,for f in *.csv; do mv "$f" "${f%.csv}.bak"; done
rename all files with .json extension to .bak,for f in *.json; do mv "$f" "${f%.json}.bak"; done
rename all files with .xml extension to .bak,for f in *.xml; do mv "$f" "${f%.xml}.bak"; done
rename all files with .yml extension to .bak,for f in *.yml; do mv "$f" "${f%.yml}.bak"; done
rename all files with .ini extension to .bak,for f in *.ini; do mv "$f" "${f%.ini}.bak"; done
rename all files with .gif extension to .bak,for f in *.gif; do mv "$f" "${f%.gif}.bak"; done
rename all files with .bmp extension to .bak,for f in *.bmp; do mv "$f" "${f%.bmp}.bak"; done
rename all files with .svg extension to .bak,for f in *.svg; do mv "$f" "${f%.svg}.bak"; done
rename all files with .psd extension to .bak,for f in *.psd; do mv "$f" "${f%.psd}.bak"; done
rename all files with .ai extension to .bak,for f in *.ai; do mv "$f" "${f%.ai}.bak"; done
rename all files with .eps extension to .bak,for f in *.eps; do mv "$f" "${f%.eps}.bak"; done
rename all files with .odt extension to .bak,for f in *.odt; do mv "$f" "${f%.odt}.bak"; done
rename all files with .rtf extension to .bak,for f in *.rtf; do mv "$f" "${f%.rtf}.bak"; done
rename all files with .wav extension to .bak,for f in *.wav; do mv "$f" "${f%.wav}.bak"; done
rename all files with .flac extension to .bak,for f in *.flac; do mv "$f" "${f%.flac}.bak"; done
rename all files with .aac extension to .bak,for f in *.aac; do mv "$f" "${f%.aac}.bak"; done
rename all files with .webm extension to .bak,for f in *.webm; do mv "$f" "${f%.webm}.bak"; done
rename all files with .mov extension to .bak,for f in *.mov; do mv "$f" "${f%.mov}.bak"; done
rename all files with .mkv extension to .bak,for f in *.mkv; do mv "$f" "${f%.mkv}.bak"; done
rename all files with .avi extension to .bak,for f in *.avi; do mv "$f" "${f%.avi}.bak"; done
rename all files with .tar extension to .bak,for f in *.tar; do mv "$f" "${f%.tar}.bak"; done
rename all files with .gz extension to .bak,for f in *.gz; do mv "$f" "${f%.gz}.bak"; done
rename all files with .dat extension to .bak,for f in *.dat; do mv "$f" "${f%.dat}.bak"; done
rename all files with .conf extension to .bak,for f in *.conf; do mv "$f" "${f%.conf}.bak"; done
Move all .png files from the Pictures directory and its subfolders into the folder called AllPNGs,find ~/Pictures -type f -name '*.png' -exec mv {} ~/AllPNGs/ \;
Move all .mp4 files from Videos and all nested folders into the flat directory AllVideos,find ~/Videos -type f -name '*.mp4' -exec mv {} ~/AllVideos/ \;
Move all .gif files from the Gifs folder tree into the GifsFlat directory,find ~/Gifs -type f -name '*.gif' -exec mv {} ~/GifsFlat/ \;
Move all .pdf files from Documents and subfolders into the PDFs directory,find ~/Documents -type f -name '*.pdf' -exec mv {} ~/PDFs/ \;
Move all .docx files from WorkDocs and all subfolders into the DocsFlat folder,find ~/WorkDocs -type f -name '*.docx' -exec mv {} ~/DocsFlat/ \;
Move all .xlsx files from the Spreadsheets directory tree into AllSheets,find ~/Spreadsheets -type f -name '*.xlsx' -exec mv {} ~/AllSheets/ \;
Move all .mp3 files from Music and its subfolders into the flat directory AllMP3s,find ~/Music -type f -name '*.mp3' -exec mv {} ~/AllMP3s/ \;
Move all .wav files from Audio and all nested folders into the folder AllWAVs,find ~/Audio -type f -name '*.wav' -exec mv {} ~/AllWAVs/ \;
Move all .zip files from Downloads and subfolders into the ZipsFlat directory,find ~/Downloads -type f -name '*.zip' -exec mv {} ~/ZipsFlat/ \;
Move all .tar.gz files from Archives and all subfolders into the Tarballs directory,find ~/Archives -type f -name '*.tar.gz' -exec mv {} ~/Tarballs/ \;
Move all .csv files from Data and its subfolders into the AllCSVs directory,find ~/Data -type f -name '*.csv' -exec mv {} ~/AllCSVs/ \;
Move all .json files from Configs and all nested folders into the JSONsFlat folder,find ~/Configs -type f -name '*.json' -exec mv {} ~/JSONsFlat/ \;
Move all .txt files from Notes and subfolders into the AllNotes directory,find ~/Notes -type f -name '*.txt' -exec mv {} ~/AllNotes/ \;
Move all .pptx files from Presentations and all subfolders into the PPTsFlat directory,find ~/Presentations -type f -name '*.pptx' -exec mv {} ~/PPTsFlat/ \;
Move all .md files from Markdown and its subfolders into the MarkdownFlat directory,find ~/Markdown -type f -name '*.md' -exec mv {} ~/MarkdownFlat/ \;
Move all .xml files from XMLFiles and all nested folders into the XMLFlat directory,find ~/XMLFiles -type f -name '*.xml' -exec mv {} ~/XMLFlat/ \;
Move all .yml files from YAMLConfigs and subfolders into the YMLFlat directory,find ~/YAMLConfigs -type f -name '*.yml' -exec mv {} ~/YMLFlat/ \;
Move all .ini files from Settings and all subfolders into the INIFlat directory,find ~/Settings -type f -name '*.ini' -exec mv {} ~/INIFlat/ \;
Move all .log files from Logs and its subfolders into the LogsFlat directory,find ~/Logs -type f -name '*.log' -exec mv {} ~/LogsFlat/ \;
Move all .bak files from Backups and all nested folders into the BAKFlat directory,find ~/Backups -type f -name '*.bak' -exec mv {} ~/BAKFlat/ \;
Move all .tmp files from Temp and subfolders into the TMPFlat directory,find ~/Temp -type f -name '*.tmp' -exec mv {} ~/TMPFlat/ \;
Move all .dat files from DataFiles and all subfolders into the DATFlat directory,find ~/DataFiles -type f -name '*.dat' -exec mv {} ~/DATFlat/ \;
Move all .svg files from SVGs and its subfolders into the SVGFlat directory,find ~/SVGs -type f -name '*.svg' -exec mv {} ~/SVGFlat/ \;
Move all .psd files from Photoshop and all nested folders into the PSDFlat directory,find ~/Photoshop -type f -name '*.psd' -exec mv {} ~/PSDFlat/ \;
Move all .ai files from Illustrator and subfolders into the AIFlat directory,find ~/Illustrator -type f -name '*.ai' -exec mv {} ~/AIFlat/ \;
Move all .eps files from EPSFiles and all subfolders into the EPSFlat directory,find ~/EPSFiles -type f -name '*.eps' -exec mv {} ~/EPSFlat/ \;
Move all .odt files from OpenDocs and its subfolders into the ODTFlat directory,find ~/OpenDocs -type f -name '*.odt' -exec mv {} ~/ODTFlat/ \;
Move all .rtf files from RichText and all nested folders into the RTFFlat directory,find ~/RichText -type f -name '*.rtf' -exec mv {} ~/RTFFlat/ \;
Move all .flac files from LosslessMusic and subfolders into the FLACFlat directory,find ~/LosslessMusic -type f -name '*.flac' -exec mv {} ~/FLACFlat/ \;
Move all .aac files from AACMusic and all subfolders into the AACFlat directory,find ~/AACMusic -type f -name '*.aac' -exec mv {} ~/AACFlat/ \;
Move all .webm files from WebMovies and its subfolders into the WEBMFlat directory,find ~/WebMovies -type f -name '*.webm' -exec mv {} ~/WEBMFlat/ \;
Move all .mov files from MovieFiles and all nested folders into the MOVFlat directory,find ~/MovieFiles -type f -name '*.mov' -exec mv {} ~/MOVFlat/ \;
Move all .mkv files from MKVMovies and subfolders into the MKVFlat directory,find ~/MKVMovies -type f -name '*.mkv' -exec mv {} ~/MKVFlat/ \;
Move all .avi files from AVIMovies and all subfolders into the AVIFlat directory,find ~/AVIMovies -type f -name '*.avi' -exec mv {} ~/AVIFlat/ \;
Move all .tar files from Tarballs and its subfolders into the TARFlat directory,find ~/Tarballs -type f -name '*.tar' -exec mv {} ~/TARFlat/ \;
Move all .gz files from GZFiles and all nested folders into the GZFlat directory,find ~/GZFiles -type f -name '*.gz' -exec mv {} ~/GZFlat/ \;
Move all .7z files from Archives7z and subfolders into the SevenZFlat directory,find ~/Archives7z -type f -name '*.7z' -exec mv {} ~/SevenZFlat/ \;
Move all .rar files from RARArchives and all subfolders into the RARFlat directory,find ~/RARArchives -type f -name '*.rar' -exec mv {} ~/RARFlat/ \;
Move all .mpg files from MPGMovies and its subfolders into the MPGFlat directory,find ~/MPGMovies -type f -name '*.mpg' -exec mv {} ~/MPGFlat/ \;
Move all .mpeg files from MPEGMovies and all nested folders into the MPEGFlat directory,find ~/MPEGMovies -type f -name '*.mpeg' -exec mv {} ~/MPEGFlat/ \;
Move all .ogg files from OGGMusic and subfolders into the OGGFlat directory,find ~/OGGMusic -type f -name '*.ogg' -exec mv {} ~/OGGFlat/ \;
Move all .opus files from OpusMusic and all subfolders into the OPUSFlat directory,find ~/OpusMusic -type f -name '*.opus' -exec mv {} ~/OPUSFlat/ \;
Move all .bmp files from Bitmaps and its subfolders into the BMPFlat directory,find ~/Bitmaps -type f -name '*.bmp' -exec mv {} ~/BMPFlat/ \;
Move all .tiff files from TIFFs and all nested folders into the TIFFFlat directory,find ~/TIFFs -type f -name '*.tiff' -exec mv {} ~/TIFFFlat/ \;
Move all .heic files from HEICPhotos and subfolders into the HEICFlat directory,find ~/HEICPhotos -type f -name '*.heic' -exec mv {} ~/HEICFlat/ \;
Move all .apng files from APNGs and all subfolders into the APNGFlat directory,find ~/APNGs -type f -name '*.apng' -exec mv {} ~/APNGFlat/ \;
Move all .cr2 files from CanonRAW and its subfolders into the CR2Flat directory,find ~/CanonRAW -type f -name '*.cr2' -exec mv {} ~/CR2Flat/ \;
Move all .nef files from NikonRAW and all nested folders into the NEFFlat directory,find ~/NikonRAW -type f -name '*.nef' -exec mv {} ~/NEFFlat/ \;
Move all .arw files from SonyRAW and subfolders into the ARWFlat directory,find ~/SonyRAW -type f -name '*.arw' -exec mv {} ~/ARWFlat/ \;
Move all .dng files from DNGPhotos and all subfolders into the DNGFlat directory,find ~/DNGPhotos -type f -name '*.dng' -exec mv {} ~/DNGFlat/ \;
Move all .svgz files from SVGZs and its subfolders into the SVGZFlat directory,find ~/SVGZs -type f -name '*.svgz' -exec mv {} ~/SVGZFlat/ \;
Move all .ico files from Icons and all nested folders into the ICOFlat directory,find ~/Icons -type f -name '*.ico' -exec mv {} ~/ICOFlat/ \;
Move all .jfif files from JFIFs and subfolders into the JFIFFlat directory,find ~/JFIFs -type f -name '*.jfif' -exec mv {} ~/JFIFFlat/ \;
Move all .webp files from WebPImages and all subfolders into the WEBPFlat directory,find ~/WebPImages -type f -name '*.webp' -exec mv {} ~/WEBPFlat/ \;
Move all .m4a files from M4AMusic and its subfolders into the M4AFlat directory,find ~/M4AMusic -type f -name '*.m4a' -exec mv {} ~/M4AFlat/ \;
Move all .aac files from AACAudio and all nested folders into the AACAudioFlat directory,find ~/AACAudio -type f -name '*.aac' -exec mv {} ~/AACAudioFlat/ \;
Move all .flv files from FLVVideos and subfolders into the FLVFlat directory,find ~/FLVVideos -type f -name '*.flv' -exec mv {} ~/FLVFlat/ \;
Move all .3gp files from ThreeGPVideos and all subfolders into the ThreeGPFlat directory,find ~/ThreeGPVideos -type f -name '*.3gp' -exec mv {} ~/ThreeGPFlat/ \;
Move all .m4v files from M4VMovies and its subfolders into the M4VFlat directory,find ~/M4VMovies -type f -name '*.m4v' -exec mv {} ~/M4VFlat/ \;
Move all .asf files from ASFMovies and all nested folders into the ASFFlat directory,find ~/ASFMovies -type f -name '*.asf' -exec mv {} ~/ASFFlat/ \;
Move all .vob files from VOBMovies and subfolders into the VOBFlat directory,find ~/VOBMovies -type f -name '*.vob' -exec mv {} ~/VOBFlat/ \;
Move all .wmv files from WMVMovies and all subfolders into the WMVFlat directory,find ~/WMVMovies -type f -name '*.wmv' -exec mv {} ~/WMVFlat/ \;
Move all .rm files from RealMedia and its subfolders into the RMFlat directory,find ~/RealMedia -type f -name '*.rm' -exec mv {} ~/RMFlat/ \;
Move all .ram files from RealAudio and all nested folders into the RAMFlat directory,find ~/RealAudio -type f -name '*.ram' -exec mv {} ~/RAMFlat/ \;
Move all .midi files from MIDIFiles and subfolders into the MIDIFLat directory,find ~/MIDIFiles -type f -name '*.midi' -exec mv {} ~/MIDIFLat/ \;
Move all .mid files from MIDFiles and all subfolders into the MIDFlat directory,find ~/MIDFiles -type f -name '*.mid' -exec mv {} ~/MIDFlat/ \;
Move all .aiff files from AIFFMusic and its subfolders into the AIFFFlat directory,find ~/AIFFMusic -type f -name '*.aiff' -exec mv {} ~/AIFFFlat/ \;
Move all .au files from AUMusic and all nested folders into the AUFlat directory,find ~/AUMusic -type f -name '*.au' -exec mv {} ~/AUFlat/ \;
Move all .mp2 files from MP2Music and subfolders into the MP2Flat directory,find ~/MP2Music -type f -name '*.mp2' -exec mv {} ~/MP2Flat/ \;
Move all .amr files from AMRRecordings and all subfolders into the AMRFlat directory,find ~/AMRRecordings -type f -name '*.amr' -exec mv {} ~/AMRFlat/ \;
Move all .caf files from CAFMusic and its subfolders into the CAFFlat directory,find ~/CAFMusic -type f -name '*.caf' -exec mv {} ~/CAFFlat/ \;
Move all .ra files from RAMusic and all nested folders into the RAFlat directory,find ~/RAMusic -type f -name '*.ra' -exec mv {} ~/RAFlat/ \;
Move all .mka files from MKAMusic and subfolders into the MKAFlat directory,find ~/MKAMusic -type f -name '*.mka' -exec mv {} ~/MKAFlat/ \;
Move all .dsf files from DSFMusic and all subfolders into the DSFFlat directory,find ~/DSFMusic -type f -name '*.dsf' -exec mv {} ~/DSFFlat/ \;
Move all .dff files from DFFMusic and its subfolders into the DFFFlat directory,find ~/DFFMusic -type f -name '*.dff' -exec mv {} ~/DFFFlat/ \;
Move all .wv files from WVMusic and all nested folders into the WVFlat directory,find ~/WVMusic -type f -name '*.wv' -exec mv {} ~/WVFlat/ \;
Move all .ape files from APEMusic and subfolders into the APEFlat directory,find ~/APEMusic -type f -name '*.ape' -exec mv {} ~/APEFlat/ \;
Move all .mpc files from MPCMusic and all subfolders into the MPCFlat directory,find ~/MPCMusic -type f -name '*.mpc' -exec mv {} ~/MPCFlat/ \;
Move all .tta files from TTAMusic and its subfolders into the TTAFlat directory,find ~/TTAMusic -type f -name '*.tta' -exec mv {} ~/TTAFlat/ \;
Move all .oga files from OGAMusic and all nested folders into the OGAFlat directory,find ~/OGAMusic -type f -name '*.oga' -exec mv {} ~/OGAFlat/ \;
Move all .spx files from SPXMusic and subfolders into the SPXFlat directory,find ~/SPXMusic -type f -name '*.spx' -exec mv {} ~/SPXFlat/ \;
Move all .opus files from OpusAudio and all subfolders into the OpusAudioFlat directory,find ~/OpusAudio -type f -name '*.opus' -exec mv {} ~/OpusAudioFlat/ \;
Move all .m3u files from Playlists and its subfolders into the M3UFlat directory,find ~/Playlists -type f -name '*.m3u' -exec mv {} ~/M3UFlat/ \;
Move all .pls files from PLSPlaylists and all nested folders into the PLSFlat directory,find ~/PLSPlaylists -type f -name '*.pls' -exec mv {} ~/PLSFlat/ \;
Move all .cue files from CueSheets and subfolders into the CUEFlat directory,find ~/CueSheets -type f -name '*.cue' -exec mv {} ~/CUEFlat/ \;
Move all .jpg files from Pictures created in January 2023 to 2023/January/ and rename as <day>.jpg,find ~/Pictures -type f -name '*.jpg' -newermt 2023-01-01 ! -newermt 2023-02-01 -exec sh -c 'd=$(date -r "$0" +%d); mv "$0" ~/2023/January/"$d".jpg' {} \;
Move all .png files from Pictures created in February 2023 to 2023/February/ and rename as <day>.png,find ~/Pictures -type f -name '*.png' -newermt 2023-02-01 ! -newermt 2023-03-01 -exec sh -c 'd=$(date -r "$1" +%d); mv "$1" ~/2023/February/"$d".png' _ {} \;
Move all .gif files from Gifs created in March 2023 to 2023/March/ and rename as <day>.gif,find ~/Gifs -type f -name '*.gif' -newermt 2023-03-01 ! -newermt 2023-04-01 -exec sh -c 'd=$(date -r "$1" +%d); mv "$1" ~/2023/March/"$d".gif' _ {} \;
Move all .bmp files from Bitmaps created in April 2023 to 2023/April/ and rename as <day>.bmp,find ~/Bitmaps -type f -name '*.bmp' -newermt 2023-04-01 ! -newermt 2023-05-01 -exec sh -c 'd=$(date -r "$1" +%d); mv "$1" ~/2023/April/"$d".bmp' _ {} \;
Move all .svg files from SVGs created in May 2023 to 2023/May/ and rename as <day>.svg,find ~/SVGs -type f -name '*.svg' -newermt 2023-05-01 ! -newermt 2023-06-01 -exec sh -c 'd=$(date -r "$0" +%d); mv "$0" ~/2023/May/"$d".svg' {} \;
Group all files by year and month based on modification date,for file in *; do [ -f \"$file\" ] || continue; year=$(date -r \"$file\" +\"%Y\"); month=$(date -r \"$file\" +\"%b\"); mkdir -p \"$year/$month\"; mv \"$file\" \"$year/$month/\"; done"
Move all PDF files to a folder called pdfs,mkdir -p pdfs && mv *.pdf pdfs/"
Count how many .txt files are in the directory,ls *.txt | wc -l"
List all files modified in the last 7 days,find . -type f -mtime -7"
Delete all .log files larger than 10MB,find . -name '*.log' -size +10M -delete"
Find all image files and move them to an 'images' folder,mkdir -p images && mv *.jpg *.jpeg *.png images/"
List files in the current directory,ls
Change directory,cd
Display contents of Neha_Contacts.vcf,cat ~/Downloads/Neha_Contacts.vcf
Clear the terminal screen,clear
Show the absolute path of Neha_Contacts.vcf,realpath ~/Downloads/Neha_Contacts.vcf
Activate the Python virtual environment,source venv/bin/activate
Clear the terminal screen,clear
Install the vobject Python package,pip install vobject
Clear the terminal screen,clear
Activate the Wedding_App Python virtual environment,source /Users/sohanpatil/Documents/VSWorkspace/Wedding_App/venv/bin/activate
Clear the terminal screen,clear
Display contents of Neha_Contacts.vcf,cat ~/Downloads/Neha_Contacts.vcf
Clear the terminal screen,clear
Show the first 10 lines of Neha_Contacts.vcf,head ~/Downloads/Neha_Contacts.vcf
Show the first 20 lines of Neha_Contacts.vcf,head -20 ~/Downloads/Neha_Contacts.vcf
Clear the terminal screen,clear
Change directory to Application Support,cd Library/Application\ Support/
List files in the current directory,ls
Change directory to AddressBook,cd AddressBook
List files in the current directory,ls
Change directory to Sources,cd Sources
Clear the terminal screen,clear
List files in the current directory,ls
Display contents of file 95211C48-76A1-4C2B-9679-979F1FB9DDDF,cat 95211C48-76A1-4C2B-9679-979F1FB9DDDF
Change directory to 95211C48-76A1-4C2B-9679-979F1FB9DDDF,cd 95211C48-76A1-4C2B-9679-979F1FB9DDDF
List files in the current directory,ls
Clear the terminal screen,clear
Install the contacts Python package,pip install contacts
Clear the terminal screen,clear
Upgrade pip,pip install --upgrade pip
Clear the terminal screen,clear
Show the absolute path of Neha_Contacts.vcf,realpath ~/Downloads/Neha_Contacts.vcf
Clear the terminal screen,clear
Change directory to Downloads,cd /Users/sohanpatil/Downloads
Clear the terminal screen,clear
List files in the current directory,ls
Open VS Code in the current directory,code .
Show the absolute path of Neha_Contacts.vcf,realpath ~/Downloads/Neha_Contacts.vcf
Activate the Wedding_App Python virtual environment,source /Users/sohanpatil/Documents/VSWorkspace/Wedding_App/venv/bin/activate
Show disk usage in kilobytes,df -k
Change directory to UBUNTU 20_0 volume,cd /Volumes/UBUNTU\ 20_0
List files in the current directory,ls
Show disk usage of SohanPhone directory,du -sk SohanPhone
Change directory to SohanPhonels,cd SohanPhonels
List files in the current directory,ls
Change directory to SohanPhone,cd SohanPhone
List files in the current directory,ls
List files in Davis directory,ls Davis
Change directory to Davis,cd Davis
List files in the current directory,ls
Exit the shell,exit
Activate the Wedding_App Python virtual environment,source /Users/sohanpatil/Documents/VSWorkspace/Wedding_App/venv/bin/activate
Print working directory,pwd
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
List files in the current directory,ls
Pull latest changes from git,git pull
Accept Xcode license,sudo xcodebuild -license
Pull latest changes from git,git pull
Accept Xcode license,sudo xcodebuild -license
Pull latest changes from git,git pull
Show git diff for dbtest.py,gd dbtest.py
Stash changes for dbtest.py,git stash push dbtest.py
Show git diff for model.py,gd model.py
Stash changes for model.py,git stash push model.py
Pull latest changes from git,git pull
Show git diff for portfolio.py,gd portfolio.py
Stash changes for portfolio.py,git stash push portfolio.py
Show git diff for postprocessmanage.py,gd postprocessmanage.py
Stash changes for postprocessmanage.py,git stash push postprocessmanage.py
Pull latest changes from git,git pull
Run pylint,pylint
Run pylint on stocksLib.py,pylint stocksLib.py
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Open foo in vi,vi foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Open foo in vi,vi foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Search for 'undefined' in foo,grep undefined foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Search for 'undefined' in foo,grep undefined foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Search for 'undefined' in foo,grep undefined foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Search for 'undefined' in foo,grep undefined foo
Run pylint on stocksLib.py and save output to foo,pylint stocksLib.py > foo
Search for 'undefined' in foo,grep undefined foo
Open foo in vi,vi foo
Run pylint on config.py,pylint config.py
Run pylint on config.py and search for 'undef',pylint config.py | grep undef
Run pylint on all .py files and search for 'undefined',for i in *.py\ndo\necho $i\npylint | grep undefined\nread line\ndone
Run pylint on all .py files and search for 'undefined',for i in *.py\ndo\necho $i\npylint $i | grep undefined\nread line\ndone
Show git status,gt
Show git status,gt2
Show git status,a 
Show git status,alias
Show git diff for stocksLib.py,gc stocksLib.py
Push changes to git,git push
Show git status,git status
Show git diff for analysis.py,gc analysis.py
Push changes to git,git push
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Search for 'signup' in ssurls.py,grep signup ssurls.py
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Search for 'ssmacd' in all .py files,grep ssmacd *.py
Start MySQL client,mysql
Print working directory,pwd
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Push changes to git,git push
Show git remote URLs,git remote -v
Change directory to MobileSync backup,cd ~/Library/Application\ Support/MobileSync
List files in the current directory,LS
List files in the current directory,ls
Clear the terminal screen,clear
Change directory to saralstocksWeb,cd saralstocksWeb
List files in the current directory,ls
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Show git status,git status
Pull latest changes from git,git pull
Push changes to git,git push
Add all files to git,git add .
Commit changes with message 'WIP',git commit -m "WIP"
Push changes to git,git push
Clear the terminal screen,cleaar
Clear the terminal screen,clear
Show git status,git status
Clear the terminal screen,clear
Exit the shell,exit
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
List files in the current directory,ls
Remove __pycache__ directory from git,git rm __pycache__/
Remove __pycache__ directory recursively from git,git rm -r __pycache__/
Commit changes with message 'Removed pycache',git commit -m "Removed pycache"
Push changes to git,git push
Clear the terminal screen,clear
Remove tmp directory recursively from git,git rm -r tmp/
Remove logs directory recursively from git,git rm -r logs/
Remove dn directory recursively from git,git rm -r dn/
Commit changes with message 'Removed extra directories',git commit -m "Removed extra directories"
Push changes to git,git push
Exit the shell,exit
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Show git branch,git branch
Show git status,git status
Show git status,gt
Push changes to git,git push
Fetch changes from git,git fetch
Pull latest changes from git,git pull
Push changes to git,git push
Show git status,gt
Show git status,git status
Remove tmp directory recursively from git,git rm -r tmp
Commit changes to git,git commit
Add tmp directory to git,git add tmp
Commit changes to git,git commit
Remove tmp directory from git cache,git rm --cache tmp
Remove tmp directory recursively from git cache,git rm -r --cache tmp
Commit changes to git,git commit
Show git diff for longterm_trend.py,git diff longterm_trend.py
Start bash shell,bash
Exit the shell,exit
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Show git status,git status
Show git diff for longterm_trend.py,git diff longterm_trend.py
Stash changes for longterm_trend.py,git stash push longterm_trend.py
Clear the terminal screen,clear
Show git status,git status
Display contents of log.txt,cat log.txt
Remove log.txt from git,git rm log.txt
Force remove log.txt from git,git rm -f log.txt
Clear the terminal screen,clear
Show git status,git status
Alias git status,alias git status
Alias gt to git status,alias gt="git status"
Show git status,gt
Show git status,gs
Remove static/ss/preprocess.txt from git,git rm static/ss/preprocess.txt
Force remove static/ss/preprocess.txt from git,git rm -f static/ss/preprocess.txt
Clear the terminal screen,gt
Pull latest changes from git,git pull
Clear the terminal screen,clear
Activate the finance conda environment,conda activate finance
Clear the terminal screen,clear
Show path to python,which python
Show path to python3,which python3
Change directory to finance environment bin,cd /Users/sohanpatil/opt/anaconda3/envs/finance/bin/
List files in the current directory,ls
Change directory to python3,cd python3
Clear the terminal screen,clear
List files in the current directory,ls
Change directory up one level,cd ..
List files in the current directory,ls
Change directory to lib,cd lib
List files in the current directory,ls
Clear the terminal screen,clear
Change directory to home,cd
Change directory to previous directory,cd -
List files in the current directory,ls
Change directory to python3.1,cd python3.1
List files in the current directory,ls
Clear the terminal screen,clear
List files in the current directory,ls | grep chrome*
List files in the current directory matching chrome*,ls | grep *chrome*
List files in the current directory,ls
Change directory up one level,cd ..
Change directory to python3.10,cd python3.10
List files in the current directory,ls
Clear the terminal screen,clear
List files in the current directory,ls
List files in the current directory matching chrome*,ls | grep *chrome*
Clear the terminal screen,clear
Show current directory,c
Change directory to home,cd
List files in the current directory,ls
Change directory to saralstocksWeb,cd saralstocksWeb
Deactivate the conda environment,conda deactivate
Clear the terminal screen,clear
List files in the current directory,ls
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
List files in the current directory,ls
Show git status,git status
Clear the terminal screen,clear
Change directory to uploads,cd uploads
Move ADANIENT.NS.csv from Downloads to current directory,mv ~/Downloads/ADANIENT.NS.csv .
Show git status,git status
Exit the shell,exit
Clear the terminal screen,clea
Clear the terminal screen,clear
List files in the current directory,ls
Change directory to VSWorkspace,cd Documents/VSWorkspace
List files in the current directory,ls
Change directory to Wedding_App,cd Wedding_App
Activate the Wedding_App Python virtual environment,source /Users/sohanpatil/Documents/VSWorkspace/Wedding_App/venv/bin/activate
Clear the terminal screen,clear
Install the black Python package,pip install black
Clear the terminal screen,clear
Change directory to home,cd
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Clear the terminal screen,clear
List files in the current directory,ls
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Formatting changes and addition of new code',git commit -m "Formatting changes and addition of new code"
Push changes to git,git push
Pull latest changes from git,git pull
Show git diff for config.py,git diff config.py
Add config.py to git,git add config.py
Commit changes with message 'WIP',git commit -m "WIP\n"
Push changes to git,git push
Fetch changes from git,git fetch
Pull latest changes from git,git pull
Clear the terminal screen,clear
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Fixed merge conflicts',git commit -m "Fixed merge conflicts"
Push changes to git,git push
Clear the terminal screen,clear
Pull latest changes from git,git pull
Push changes to git,git push
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
List files in the current directory,ls
Show git status,git status
Show git diff for longterm_trend.py,git diff longterm_trend.py
Clear the terminal screen,clear
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Show git diff for longterm_trend.py,git diff longterm_trend.py
Commit changes with message 'Modified components',git commit -m "Modified components"
Show git diff for dataLib.py,git diff dataLib.py
Add dataLib.py to git,git add dataLib.py
Show git diff for dbtest.py,gd dbtest.py
Stash changes for dbtest.py,git stash push dbtest.py
Show git status,git status
Show git diff for ssautoincl.py,git diff ssautoincl.py
Stash changes for ssautoincl.py,git stash push ssautoincl.py
Commit changes with message 'WIP',git commit -m "WIP"
Push changes to git,git push
Pull latest changes from git,git pull
Push changes to git,git push
Clear the terminal screen,clear
Run longterm_trend.py,python longterm_trend.py
Run longterm_trend.py with NSE:JBMA data,python longterm_trend.py -d nse:jbma
Activate the finance conda environment,conda activate finance
Run longterm_trend.py with NSE:JBMA data,python longterm_trend.py -d nse:jbma
Clear the terminal screen,clear
Run longterm_trend.py with NSE:JBMA data,python longterm_trend.py -d nse:jbma
Start bash shell,bash
Exit the shell,exit
Start bash shell,bash
Exit the shell,exit
Show disk usage in kilobytes,df -k 
Show disk usage of current directory,du -sk .
Print working directory,pwd
Change directory to /System/Volumes/Data/home,cd /System/Volumes/Data/home
List files in the current directory,ls
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Pull latest changes from git,git pull
Clear the terminal screen,clear
Run Python script with debugpy, /usr/bin/env /opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2023.22.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 54435 -- /Users/sohanpatil/Documents/Leetcode/242_Valid_Anagram.py 
Clear the terminal screen,clear
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Longterm page shows data without exchange related bug.',git commit -m "Longterm page shows data without exchange related bug."
Show git status,git status
Push changes to git,git push
Clear the terminal screen,clear
List files in the current directory,ls
Search for 'urlPrefix' in all .py files,grep urlPrefix *.py
Clear the terminal screen,ls
Clear the terminal screen,clear
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Show git diff for longterm_trend.py,git diff longterm_trend.py
Commit changes with message 'Removed pkl content',git commit -m "Removed pkl content"
Push changes to git,git push
Quit the shell,quit
Exit the shell,exit
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Pull latest changes from git,git pull
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Cleaned code for sell stock',git commit -m "Cleaned code for sell stock"
Push changes to git,git push
Clear the terminal screen,clear
Connect to MySQL server,mysql -h
Connect to MySQL server at 103.228.50.33,mysql -h 103.228.50.33
Connect to MySQL server at 103.228.50.33 with user and password,mysql -h 103.228.50.33 -u ssdefaultuser -p
Search for 'SUSPECT' (case-insensitive) in all .py files,grep -i SUSPECT *.py
Show git status,git status
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Added some details for suspect stocks',git commit -m "Added some details for suspect stocks"
Push changes to git,git push
Clear the terminal screen,clear
Change directory up one level,cd ..
List files in the current directory,ls
Change directory up one level,cd ..
List files in the current directory,ls
Change directory up one level,cd ..
List files in the current directory,ls
Change directory to home,cd
List files in the current directory,ls
Change directory up two levels,cd ../../
List files in the current directory,ls
Change directory to Volumes/Seagate,cd Volumes/Seagate
List files in the current directory,ls
Search for '0893' in current directory,grep 0893 .
Count files named IMG_0894.JPG in directory,find $directory_path -name IMG_0894.JPG | wc -l
Count files named IMG_0894.JPG in current directory,find . -name IMG_0894.JPG | wc -l
List files in the current directory,ls
Change directory to Suhas,cd Suhas
Change directory up one level,cd ..
List files in the current directory,ls
Change directory to SuhasIphonePhotos,cd SuhasIphonePhotos
List files in the current directory,ls
Count files named IMG_0894.JPG in current directory,find . -name IMG_0894.JPG | wc -l
Count files named IMG_6227.MOV in current directory,find . -name IMG_6227.MOV | wc -l
Find IMG_6227.MOV in current directory,find . -name IMG_6227.MOV
Find IMG_0894.JPG in current directory,find . -name IMG_0894.JPG
Change directory to home,cd
Change directory to Pictures,cd Pictures
List files in the current directory,ls
Change directory to Photos Library,cd Photos\ Library.photoslibrary
List files in the current directory,ls
Start bash shell,sudo bash
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Show git status,git status
Show shell path,echo /bin/zsh
Clear the terminal screen,clear
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Pull latest changes from git,git pull
Clear the terminal screen,clear
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Push changes to git,git push
Pull latest changes from git,git pull
Push changes to git,git push
Add longterm_trend.py to git,git add longterm_trend.py
Commit changes with message 'Suspect stock related collection done',git commit -m Suspect stock related collection done"\nquit\n'\n"
Show git status,git status
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Pull latest changes from git,git pull
Push changes to git,git push
Show shell path,echo /bin/zsh
Show path to python,/opt/homebrew/bin/python3
Show shell path,echo /bin/zsh
Show path to python,/opt/homebrew/bin/python3
Show shell path,echo /bin/zsh
Change directory to saralstocksWeb,cd Documents/saralstocksWeb
Pull latest changes from git,git pull
Show shell path,echo /bin/zsh
Show system information,uname -a
Show open files on port 6443,lsof -i:6443
Clear the terminal screen,clear
Install k3s using curl,curl -sfL https://get.k3s.io | sh -
Stop minikube,minikube stop
Delete minikube,minikube delete
List all Docker containers,docker ps -aq
Change directory to ~/.kube,cd ~/.kube
List files in the current directory,ls
Change directory up one level,cd ..
Change directory to ~/.minikube,cd ~/.minikube
List files in the current directory,ls
Change directory up one level,cd ..
Show error message,[ERROR]  Can not find systemd or openrc to 
Remove .kube and .minikube directories,rm -r ~/.kube ~/.minikube\

Change directory to ~/.minikube,cd ~/.minikube
Clear the terminal screen,clear
Remove localkube and minikube binaries,sudo rm /usr/local/bin/localkube /usr/local/bin/minikube\

Stop kubelet mounts,systemctl stop '*kubelet*.mount'\nsudo rm -rf /etc/kubernetes/\ndocker system prune -af --volumes
Clear the terminal screen,clear
Uninstall minikube using brew,brew uninstall minikube
Clear the terminal screen,clear
Install minikube using brew,brew install minikube
Show minikube status,minikube status
Clear the terminal screen,clear
Show path to minikube,which minikube
Start minikube,minikube start
Show all Kubernetes pods,kubectl get po -A
Show all Kubernetes pods using minikube,minikube kubectl -- get po -A
Alias kubectl to minikube kubectl,alias kubectl="minikube kubectl --"\

Run kubectl,kubectl
Clear the terminal screen,clear
Open minikube dashboard,minikube dashboard
Show shell path,echo /bin/zsh
List files in the current directory,ls
Create Python virtual environment venvKhojpal,python -m venv venvKhojpal
Run Python script to print environment variables,/usr/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.0/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.0/pythonFiles/deactivate/zsh/envVars.txt
Install fastapi and uvicorn,pip install fastapi uvicorn
Clear the terminal screen,clear
Run main.py,python main.py
Run Python script to print environment variables,/opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Clear the terminal screen,clear
Run main.py,python main.py
Clear the terminal screen,clear
Run Python script to print environment variables,/usr/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Clear the terminal screen,clear
Deactivate Python virtual environment,deactivate
Clear the terminal screen,clear
Activate Python virtual environment venvKhojpal,source venvKhojpal/bin/activate
Clear the terminal screen,clear
Pull Redis Docker image,docker pull redis
Run Redis Docker container,docker run --name some-redis -d redis
Install redis Python package,pip install redis
Clear the terminal screen,clear
Run Postgres Docker container,docker run --name some-postgres -e POSTGRES_PASSWORD=password -d postgres
Clear the terminal screen,clear
Pull Postgres Docker image,docker pull postgres
Run Postgres Docker container with volume and port,docker run --name postgres-container -v local_psql_data:/var/lib/postgresql/data -p 54320:5432 -e POSTGRES_PASSWORD=my_password -d postgres\

Show open files on port 54320,sudo lsof -i:54320
Show open files on port 5432,sudo lsof -i:5432
Install psycopg2-binary Python package,pip install psycopg2-binary
Clear the terminal screen,clear
Run Python script to print environment variables,/usr/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Install fastapi Python package,pip install fastapi
Install uvicorn Python package,pip install uvicorn
Clear the terminal screen,clear
Start Python interpreter,python
Clear the terminal screen,clear
Exit the shell,exit
Install logger Python package,pip install logger
Clear the terminal screen,clear
Create Python virtual environment venvStorage,python -m venv venvStorage
Run Python script to print environment variables,/usr/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Clear the terminal screen,clear
Activate Python virtual environment venvStorage,source venvStorage/bin/activate
Clear the terminal screen,clear
Install uvicorn and fastapi Python packages,pip install uvicorn fastapi
Clear the terminal screen,clear
Run Python script to print environment variables,/opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Install psycopg2-binary Python package,pip install psycopg2-binary
Clear the terminal screen,clear
Install cryptography Python package,pip install cryptography
Pull pgadmin4 Docker image,docker pull pgadmin4
Pull dpage/pgadmin4 Docker image,docker pull dpage/pgadmin4
Run pgadmin4 Docker container,docker run -p 80:80 \
    -e 'PGADMIN_DEFAULT_EMAIL=user@domain.com' \
    -e 'PGADMIN_DEFAULT_PASSWORD=test' \
    -d dpage/pgadmin4
Clear the terminal screen,clear
Deactivate the conda environment,conda deactivate
List files in the current directory,ls
Activate Python virtual environment venvStorage,source venvStorage/bin/activate
Clear the terminal screen,clear
Display contents of Professional_Photo.jpg,cat ~/Professional_Photo.jpg
Clear the terminal screen,clear
Display contents of Professional_Photo.jpg,cat ~/Professional_Photo.jpg
Clear the terminal screen,clear
Display contents of Professional_Photo.jpg,cat ~/Professional_Photo.jpg
Clear the terminal screen,clear
Activate Python virtual environment venvStorage,source venvStorage/bin/activate
Deactivate the conda environment,conda deactivate
Clear the terminal screen,clear
Install requests Python package,pip install requests
Upgrade pip,python -m pip install --upgrade pip
Clear the terminal screen,clear
Show hostname,hostname
Install uvicorn Python package (typo),pip isntall uvicorn
Install uvicorn and fastapi Python packages,pip install uvicorn fastapi
Clear the terminal screen,clear
Run Python script to print environment variables,/opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Clear the terminal screen,clear
Deactivate the conda environment,conda deactivate
Install p2pd Python package,pip install p2pd
Clear the terminal screen,clear
Initialize a new git repository,git init
Clear the terminal screen,clear
Show git status,gst
Add all files to git,git add .
Clear the terminal screen,clear
Commit changes with message 'Initial Commit',git commit -m "Initial Commit"
Clear the terminal screen,clear
Push changes to git,git push
Add remote origin for git,git remote add origin https://github.com/sohanpatil1/sharedStorage.git\
git branch -M main\ngit push -u origin main
Clear the terminal screen,clear
Change directory to storage,cd Documents/VSWorkspace/storage
List files in the current directory,ls
Clear the terminal screen,clear
Push changes to git,git push
Add remote origin for git,git remote add origin https://github.com/sohanpatil1/sharedStorage.git\
git branch -M main\ngit push -u origin main
Run Python script to print environment variables,/opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Install pystun Python package,pip install pystun
Clear the terminal screen,clear
Run pystun,pystun
Clear the terminal screen,clear
List files in the current directory,ls
Run server.py,python server.py
Change directory to storage,cd Documents/VSWorkspace/storage
Run client.py,python client.py
Start HTTP server on port 3000,python -m http.server 3000
Show IP configuration,ipconfig
Show network interfaces,ifconfig
Show network interfaces containing '10',ifconfig | grep 10
Show network interfaces containing 'v6',ifconfig | grep v6
Show network interfaces containing 'IPV6' (case-insensitive),ifconfig | grep -i IPV6
Show network interfaces containing 'inet6' (case-insensitive),ifconfig | grep -i inet6
Clear the terminal screen,clear
Run server.py,python server.py
Typo for clear,cler
Clear the terminal screen,clear
Run server.py,python server.py
Typo for clear,cleaer
Clear the terminal screen,clear
Run server.py,python server.py
Clear the terminal screen,clear
Run client.py,python client.py
Start HTTP server on port 3000,python -m http.server 3000
Clear the terminal screen,clear
Run client.py,python client.py
Ping IPv6 address,ping -6 ipv6.google.com
Ping IPv6 address using ping6,ping6 ipv6.google.com
Clear the terminal screen,clear
Ping IPv6 address,ping ipv6.google.com
Trace route to google.com,traceroute google.com
Show traceroute help,traceroute help
Show traceroute help,traceroute --help
Trace route using protocol 6,traceroute -P 6
Clear the terminal screen,ipconfig
Show network interfaces,ifconfig
Clear the terminal screen,ifconfig
Clear the terminal screen,ipconfig
Clear the terminal screen,ifconfig
Clear the terminal screen,ip
Show IP command help,ip command
Show network links,ip link show
Trace route to 2001:4860:4860::8888 on port 53,sudo traceroute -nTp 53 2001:4860:4860::8888
Install nmap using brew,brew install nmap
Clear the terminal screen,clear
Run nmap,nmap
Run nmap with -r option,nmap -r
Run nmap with -r and -iR options,nmap -r -iR
Run nmap with -r and -iR 100 options,nmap -r -iR 100
Clear the terminal screen,clear
Run nmap on all ports for target,nmap -p- <target>\

Run nmap on all ports,nmap -p\

Clear the terminal screen,clear
Start HTTP server on port 3000,python -m http.server 3000
Show network interfaces,ifconfig
Clear the terminal screen,ifconfig
Get IP address for en1,ipconfig getifaddr en1
Get IP address for en1,ifconfig getifaddr en1
Clear the terminal screen,ifconfig | grep 10
Start HTTP server on port 3000,python -m http.server 3000
Change directory to storage,cd Documents/VSWorkspace/storage
Start HTTP server on port 3000,python -m http.server 3000
Show IP configuration,ipconfig
Show network interfaces,ifconfig
Whois lookup for saralstocks.com,whois saralstocks.com
Clear the terminal screen,clear
Whois lookup for google.com,whois google.com
Clear the terminal screen,clear
Whois lookup for viveksho.me,whois viveksho.me
Run Python script to print environment variables,/opt/homebrew/bin/python3 /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/printEnvVariablesToFile.py /Users/sohanpatil/.vscode/extensions/ms-python.python-2024.0.1/pythonFiles/deactivate/zsh/envVars.txt
Change directory to storage,cd Documents/VSWorkspace/storage
List files in the current directory,ls
Clear the terminal screen,clear
Pull latest changes from git,git pull
Clear the terminal screen,clear
Uninstall pystun Python package,pip uninstall pystun
Clear the terminal screen,clear
List installed Python packages,pip list
Clear the terminal screen,clear
Pull latest changes from git,git pull
Clear the terminal screen,clear
Pull latest changes from git,git pull
Clear the terminal screen,clear
Deactivate the conda environment,conda deactivate
Remove NewProfessional_Photo.jpg from git cache,git rm --cached NewProfessional_Photo.jpg
Clear the terminal screen,clear
Show git status,git status
Clear the terminal screen,clear
Show git diff for client.,git diff client.
List files in the current directory,ls
Clear the terminal screen,clear
List files in the current directory,ls
Open client.py in vi,vi client.py
Print working directory,pwd
Show git diff for client.py,git diff client.py
Start bash shell,bash
Remove design.excalidraw.png from git cache,git rm --cached design.excalidraw.png
Clear the terminal screen,clear
Show git branch,git branch
Clear the terminal screen,clear
Show path to python,/Users/sohanpatil/Documents/VSWorkspace/storage/venvStorage/bin/python
Clear the terminal screen,clear
Open .zshrc in VS Code,code ~/.zshrc
Source .zshrc,source ~/.zshrc
Clear the terminal screen,clear
Exit the shell,exit
Create .hushlogin file,touch ~/.hushlogin
Exit the shell,exit
Change directory to storage,cd Documents/VSWorkspace/storage
Clear the terminal screen,clear
List files in the current directory,ls
Change directory to src,cd src
Change directory to testing,cd ../testing
Run server.py,python server.py
Clear the terminal screen,clear
Run client1.py,python client1.py
Clear the terminal screen,clear
Install debugpy Python package,pip install debugpy
Show importlib-metadata,importlib-metadata
Install importlib-metadata Python package,pip install importlib-metadata
Clear the terminal screen,clear
Install importlib-metadata Python package,pip install importlib-metadata
Deactivate the conda environment,conda deactivate
Clear the terminal screen,clear
List files in the current directory,ls
Activate Python virtual environment venvStorage,source venvStorage/bin/activate
Clear the terminal screen,clear
Install importlib-metadata Python package,pip install importlib-metadata
Install debugpy Python package,pip install debugpy
Clear the terminal screen,clear
Run client1.py,python client1.py
Clear the terminal screen,clear
Run client1.py,python client1.py
Clear the terminal screen,clear
Run server.py,python server.py
Clear the terminal screen,clear
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Show open files on port 8090,lsof -i:8090
Run receiver.py,python receiver.py
Show open files on port 8090,lsof -i:8090
Run receiver.py,python receiver.py
Show open files on port 8090,lsof -i:8090
Run sender.py,python sender.py
Clear the terminal screen,clear
Show open files on port 8090,sudo lsof -i:8090
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Show open files on port 8090,sudo lsof -i:8090
Clear the terminal screen,clear
Show open files on port 8090,sudo lsof -i:8090
Clear the terminal screen,clear
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Show git status,gst
Clear the terminal screen,clear
Change directory to testing,cd testing
Add server.py, receiver.py, and sender.py to git,git add server.py receiver.py sender.py
Commit changes with message 'Sending message from sender to receiver without issues.',git commit -m "Sending message from sender to receiver without issues."
Push changes to git,git push
Clear the terminal screen,clear
Move server.py to src directory,git mv server.py ../src
Move receiver.py to src directory,git mv receiver.py ../src
Move sender.py to src directory,git mv sender.py ../src
List files in the current directory,ls
Change directory up one level,cd ..
List files in the current directory,ls
Clear the terminal screen,clear
Change directory to src,cd src
Show current directory,s
List files in the current directory,ls
Run server.py,python server.py
Clear the terminal screen,clear
Change directory up one level,cd ..
Change directory to src,cd src
Clear the terminal screen,clear
Run receiver.py,python receiver.py
Clear the terminal screen,clear
Run server.py,python server.py
Clear the terminal screen,clear
Run receiver.py,python receiver.py
Change directory to src,s,ls
Change directory to storage/src,cd Documents/VSWorkspace/storage/src
Clear the terminal screen,clear
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Clear the terminal screen,python sender.py
Clear the terminal screen,py server.py
Export py as alias for python,export py='python'
Run py,py
Run receiver.py,python receiver.py
Clear the terminal screen,clear
Run server.py,python server.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run temp.py,python temp.py
Change directory to storage/src,cd Documents/VSWorkspace/storage/src
Clear the terminal screen,clear
Run sender.py,python sender.py
Run temp.py,python temp.py
Clear the terminal screen,python server.py
Run temp.py,python temp.py
Clear the terminal screen,python server.py
Open ~/.zshrc in vim,vim ~/.zshrc
Source ~/.zshrc,source ~/.zshrc
Open ~/.zshrc in vim,vim ~/.zshrc
Source ~/.zshrc,source ~/.zshrc
Clear the terminal screen,clear
Reset the terminal,reset
Source ~/.zshrc,source ~/.zshrc
Clear the terminal screen,clear
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,clear
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Clear the terminal screen,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py
Run receiver.py,python receiver.py
Run sender.py,python sender.py